// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Worky.Context;

#nullable disable

namespace Worky.Migrations
{
    [DbContext(typeof(WorkyDbContext))]
    [Migration("20250504184026_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_general_ci")
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("RolesUsers", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("RolesUsers");
                });

            modelBuilder.Entity("Worky.Migrations.Deal", b =>
                {
                    b.Property<ulong>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("id"));

                    b.Property<string>("company_id")
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)");

                    b.Property<DateOnly>("date_end")
                        .HasColumnType("date");

                    b.Property<DateOnly>("date_start")
                        .HasColumnType("date");

                    b.Property<bool>("status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("sum")
                        .HasColumnType("int(11)");

                    b.Property<ulong>("tariff_id")
                        .HasColumnType("bigint(20) unsigned");

                    b.HasKey("id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "company_id" }, "deal_ibfk_2");

                    b.HasIndex(new[] { "tariff_id" }, "tarrif_id");

                    b.ToTable("Deal");
                });

            modelBuilder.Entity("Worky.Migrations.Education", b =>
                {
                    b.Property<ulong>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("id")
                        .HasName("PRIMARY");

                    b.ToTable("Education");
                });

            modelBuilder.Entity("Worky.Migrations.Feedback", b =>
                {
                    b.Property<ulong>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("id"));

                    b.Property<ulong>("resume_id")
                        .HasColumnType("bigint(20) unsigned");

                    b.Property<ulong>("vacancy_id")
                        .HasColumnType("bigint(20) unsigned");

                    b.HasKey("id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "resume_id" }, "resume_id");

                    b.HasIndex(new[] { "vacancy_id" }, "vacancy_id");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("Worky.Migrations.Manager", b =>
                {
                    b.Property<string>("id")
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)");

                    b.Property<short>("age")
                        .HasColumnType("smallint(6)");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("price")
                        .HasColumnType("int(11)");

                    b.Property<string>("second_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("id")
                        .HasName("PRIMARY");

                    b.ToTable("Manager");
                });

            modelBuilder.Entity("Worky.Migrations.Manager_filter", b =>
                {
                    b.Property<ulong>("filter_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("filter_id"));

                    b.Property<string>("manager_id")
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)");

                    b.Property<ulong>("typeOfActivity_id")
                        .HasColumnType("bigint(20) unsigned");

                    b.HasKey("filter_id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "manager_id" }, "manager_filter_ibfk_1");

                    b.HasIndex(new[] { "typeOfActivity_id" }, "typeOfActivity_id");

                    b.ToTable("Manager_filter");
                });

            modelBuilder.Entity("Worky.Migrations.RecruitManager", b =>
                {
                    b.Property<ulong>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("id"));

                    b.Property<string>("company_id")
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)");

                    b.Property<DateOnly>("date_end")
                        .HasColumnType("date");

                    b.Property<DateOnly>("date_start")
                        .HasColumnType("date");

                    b.Property<ulong>("manager_id")
                        .HasColumnType("bigint(20) unsigned");

                    b.Property<bool>("status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("sum")
                        .HasColumnType("int(11)");

                    b.HasKey("id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "manager_id" }, "manager_id");

                    b.HasIndex(new[] { "company_id" }, "recruitmanager_ibfk_2");

                    b.ToTable("RecruitManager");
                });

            modelBuilder.Entity("Worky.Migrations.Resume", b =>
                {
                    b.Property<ulong>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("id"));

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<ulong?>("education_id")
                        .HasColumnType("bigint(20) unsigned");

                    b.Property<short?>("experience")
                        .HasColumnType("smallint(6)");

                    b.Property<DateTime>("income_date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("post")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("skill")
                        .HasColumnType("text");

                    b.Property<int?>("wantedSalary")
                        .HasColumnType("int(11)");

                    b.Property<string>("worker_id")
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)");

                    b.HasKey("id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "income_date" }, "income_date");

                    b.HasIndex(new[] { "education_id" }, "resume_ibfk_2");

                    b.HasIndex(new[] { "worker_id" }, "worker_ibfk_1");

                    b.ToTable("Resume");
                });

            modelBuilder.Entity("Worky.Migrations.Resume_filter", b =>
                {
                    b.Property<ulong>("filter_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("filter_id"));

                    b.Property<ulong>("resume_id")
                        .HasColumnType("bigint(20) unsigned");

                    b.Property<ulong>("typeOfActivity_id")
                        .HasColumnType("bigint(20) unsigned");

                    b.HasKey("filter_id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "resume_id" }, "resume_id")
                        .HasDatabaseName("resume_id1");

                    b.HasIndex(new[] { "typeOfActivity_id" }, "typeOfActivity_id")
                        .HasDatabaseName("typeOfActivity_id1");

                    b.ToTable("Resume_filter");
                });

            modelBuilder.Entity("Worky.Migrations.RoleClaims", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int(11)");

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)")
                        .UseCollation("utf8mb3_uca1400_ai_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("RoleId"), "utf8mb3");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "RoleId" }, "IX_AspNetRoleClaims_RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Worky.Migrations.Roles", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "NormalizedName" }, "RoleNameIndex")
                        .IsUnique();

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Worky.Migrations.Tarrif", b =>
                {
                    b.Property<ulong>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("id"));

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("price")
                        .HasColumnType("int(11)");

                    b.HasKey("id")
                        .HasName("PRIMARY");

                    b.ToTable("Tarrif");
                });

            modelBuilder.Entity("Worky.Migrations.UserClaims", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int(11)");

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)")
                        .UseCollation("utf8mb3_uca1400_ai_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("UserId"), "utf8mb3");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "UserId" }, "IX_AspNetUserClaims_UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Worky.Migrations.UserLogins", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .UseCollation("utf8mb3_uca1400_ai_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("LoginProvider"), "utf8mb3");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .UseCollation("utf8mb3_uca1400_ai_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("ProviderKey"), "utf8mb3");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)")
                        .UseCollation("utf8mb3_uca1400_ai_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("UserId"), "utf8mb3");

                    b.HasKey("LoginProvider", "ProviderKey")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "UserId" }, "IX_AspNetUserLogins_UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Worky.Migrations.UserRoles", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex(new[] { "RoleId" }, "IX_AspNetUserRoles_RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Worky.Migrations.UserTokens", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)")
                        .UseCollation("utf8mb3_uca1400_ai_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("UserId"), "utf8mb3");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .UseCollation("utf8mb3_uca1400_ai_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("LoginProvider"), "utf8mb3");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .UseCollation("utf8mb3_uca1400_ai_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Name"), "utf8mb3");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0, 0 });

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Worky.Migrations.Users", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "NormalizedEmail" }, "EmailIndex");

                    b.HasIndex(new[] { "NormalizedUserName" }, "UserNameIndex")
                        .IsUnique();

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Worky.Migrations.Vacancy", b =>
                {
                    b.Property<ulong>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("id"));

                    b.Property<string>("company_id")
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<ulong>("education_id")
                        .HasColumnType("bigint(20) unsigned");

                    b.Property<short?>("experience")
                        .HasColumnType("smallint(6)");

                    b.Property<DateTime>("income_date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<int?>("max_salary")
                        .HasColumnType("int(11)");

                    b.Property<int>("min_salary")
                        .HasColumnType("int(11)");

                    b.Property<string>("post")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "education_id" }, "education_id");

                    b.HasIndex(new[] { "income_date" }, "income_date")
                        .HasDatabaseName("income_date1");

                    b.HasIndex(new[] { "min_salary" }, "min_salary");

                    b.HasIndex(new[] { "company_id" }, "vacancy_ibfk_1");

                    b.ToTable("Vacancy");
                });

            modelBuilder.Entity("Worky.Migrations.Vacancy_filter", b =>
                {
                    b.Property<ulong>("filter_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("filter_id"));

                    b.Property<ulong>("typeOfActivity_id")
                        .HasColumnType("bigint(20) unsigned");

                    b.Property<ulong>("vacancy_id")
                        .HasColumnType("bigint(20) unsigned");

                    b.HasKey("filter_id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "typeOfActivity_id" }, "typeOfActivity_id")
                        .HasDatabaseName("typeOfActivity_id2");

                    b.HasIndex(new[] { "vacancy_id" }, "vacancy_id")
                        .HasDatabaseName("vacancy_id1");

                    b.ToTable("Vacancy_filter");
                });

            modelBuilder.Entity("Worky.Migrations.Worker", b =>
                {
                    b.Property<string>("id")
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)");

                    b.Property<short>("age")
                        .HasColumnType("smallint(6)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("phoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("second_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "email" }, "email")
                        .IsUnique();

                    b.ToTable("Worker");
                });

            modelBuilder.Entity("Worky.Migrations.__EFMigrationsHistory", b =>
                {
                    b.Property<string>("MigrationId")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.HasKey("MigrationId")
                        .HasName("PRIMARY");

                    b.ToTable("__EFMigrationsHistory");

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_uca1400_ai_ci");
                });

            modelBuilder.Entity("Worky.Migrations.company", b =>
                {
                    b.Property<string>("id")
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<Point>("office_coord")
                        .IsRequired()
                        .HasColumnType("point");

                    b.Property<string>("phoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "email" }, "email")
                        .IsUnique()
                        .HasDatabaseName("email1");

                    b.HasIndex(new[] { "office_coord" }, "idx_coord")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 32 })
                        .HasAnnotation("MySql:SpatialIndex", true);

                    b.HasIndex(new[] { "name" }, "idx_name")
                        .HasAnnotation("MySql:FullTextIndex", true);

                    b.ToTable("company");
                });

            modelBuilder.Entity("Worky.Migrations.typeOfActivity", b =>
                {
                    b.Property<ulong>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("id"));

                    b.Property<string>("direction")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "direction", "type" }, "idx_direction_type");

                    b.ToTable("typeOfActivity");
                });

            modelBuilder.Entity("RolesUsers", b =>
                {
                    b.HasOne("Worky.Migrations.Roles", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Worky.Migrations.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Worky.Migrations.Deal", b =>
                {
                    b.HasOne("Worky.Migrations.company", "company")
                        .WithMany("Deals")
                        .HasForeignKey("company_id")
                        .HasConstraintName("deal_ibfk_2");

                    b.HasOne("Worky.Migrations.Tarrif", "tariff")
                        .WithMany("Deals")
                        .HasForeignKey("tariff_id")
                        .IsRequired()
                        .HasConstraintName("deal_ibfk_1");

                    b.Navigation("company");

                    b.Navigation("tariff");
                });

            modelBuilder.Entity("Worky.Migrations.Feedback", b =>
                {
                    b.HasOne("Worky.Migrations.Resume", "resume")
                        .WithMany("Feedbacks")
                        .HasForeignKey("resume_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("feedback_ibfk_1");

                    b.HasOne("Worky.Migrations.Vacancy", "vacancy")
                        .WithMany("Feedbacks")
                        .HasForeignKey("vacancy_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("feedback_ibfk_2");

                    b.Navigation("resume");

                    b.Navigation("vacancy");
                });

            modelBuilder.Entity("Worky.Migrations.Manager_filter", b =>
                {
                    b.HasOne("Worky.Migrations.Manager", "manager")
                        .WithMany("Manager_filters")
                        .HasForeignKey("manager_id")
                        .HasConstraintName("manager_filter_ibfk_1");

                    b.HasOne("Worky.Migrations.typeOfActivity", "typeOfActivity")
                        .WithMany("Manager_filters")
                        .HasForeignKey("typeOfActivity_id")
                        .IsRequired()
                        .HasConstraintName("manager_filter_ibfk_2");

                    b.Navigation("manager");

                    b.Navigation("typeOfActivity");
                });

            modelBuilder.Entity("Worky.Migrations.RecruitManager", b =>
                {
                    b.HasOne("Worky.Migrations.company", "company")
                        .WithMany("RecruitManagers")
                        .HasForeignKey("company_id")
                        .HasConstraintName("recruitmanager_ibfk_2");

                    b.Navigation("company");
                });

            modelBuilder.Entity("Worky.Migrations.Resume", b =>
                {
                    b.HasOne("Worky.Migrations.Education", "education")
                        .WithMany("Resumes")
                        .HasForeignKey("education_id")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("resume_ibfk_2");

                    b.HasOne("Worky.Migrations.Worker", "worker")
                        .WithMany("Resumes")
                        .HasForeignKey("worker_id")
                        .HasConstraintName("worker_ibfk_1");

                    b.Navigation("education");

                    b.Navigation("worker");
                });

            modelBuilder.Entity("Worky.Migrations.Resume_filter", b =>
                {
                    b.HasOne("Worky.Migrations.Resume", "resume")
                        .WithMany("Resume_filters")
                        .HasForeignKey("resume_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("resume_filter_ibfk_1");

                    b.HasOne("Worky.Migrations.typeOfActivity", "typeOfActivity")
                        .WithMany("Resume_filters")
                        .HasForeignKey("typeOfActivity_id")
                        .IsRequired()
                        .HasConstraintName("resume_filter_ibfk_2");

                    b.Navigation("resume");

                    b.Navigation("typeOfActivity");
                });

            modelBuilder.Entity("Worky.Migrations.RoleClaims", b =>
                {
                    b.HasOne("Worky.Migrations.Roles", "Role")
                        .WithMany("AspNetRoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Worky.Migrations.UserClaims", b =>
                {
                    b.HasOne("Worky.Migrations.Users", "User")
                        .WithMany("AspNetUserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Worky.Migrations.UserLogins", b =>
                {
                    b.HasOne("Worky.Migrations.Users", "User")
                        .WithMany("AspNetUserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Worky.Migrations.UserRoles", b =>
                {
                    b.HasOne("Worky.Migrations.Roles", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Worky.Migrations.Users", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Worky.Migrations.UserTokens", b =>
                {
                    b.HasOne("Worky.Migrations.Users", "User")
                        .WithMany("AspNetUserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Worky.Migrations.Vacancy", b =>
                {
                    b.HasOne("Worky.Migrations.company", "company")
                        .WithMany("Vacancies")
                        .HasForeignKey("company_id")
                        .HasConstraintName("vacancy_ibfk_1");

                    b.HasOne("Worky.Migrations.Education", "education")
                        .WithMany("Vacancies")
                        .HasForeignKey("education_id")
                        .IsRequired()
                        .HasConstraintName("vacancy_ibfk_2");

                    b.Navigation("company");

                    b.Navigation("education");
                });

            modelBuilder.Entity("Worky.Migrations.Vacancy_filter", b =>
                {
                    b.HasOne("Worky.Migrations.typeOfActivity", "typeOfActivity")
                        .WithMany("Vacancy_filters")
                        .HasForeignKey("typeOfActivity_id")
                        .IsRequired()
                        .HasConstraintName("vacancy_filter_ibfk_2");

                    b.HasOne("Worky.Migrations.Vacancy", "vacancy")
                        .WithMany("Vacancy_filters")
                        .HasForeignKey("vacancy_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("vacancy_filter_ibfk_1");

                    b.Navigation("typeOfActivity");

                    b.Navigation("vacancy");
                });

            modelBuilder.Entity("Worky.Migrations.Education", b =>
                {
                    b.Navigation("Resumes");

                    b.Navigation("Vacancies");
                });

            modelBuilder.Entity("Worky.Migrations.Manager", b =>
                {
                    b.Navigation("Manager_filters");
                });

            modelBuilder.Entity("Worky.Migrations.Resume", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("Resume_filters");
                });

            modelBuilder.Entity("Worky.Migrations.Roles", b =>
                {
                    b.Navigation("AspNetRoleClaims");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Worky.Migrations.Tarrif", b =>
                {
                    b.Navigation("Deals");
                });

            modelBuilder.Entity("Worky.Migrations.Users", b =>
                {
                    b.Navigation("AspNetUserClaims");

                    b.Navigation("AspNetUserLogins");

                    b.Navigation("AspNetUserTokens");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Worky.Migrations.Vacancy", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("Vacancy_filters");
                });

            modelBuilder.Entity("Worky.Migrations.Worker", b =>
                {
                    b.Navigation("Resumes");
                });

            modelBuilder.Entity("Worky.Migrations.company", b =>
                {
                    b.Navigation("Deals");

                    b.Navigation("RecruitManagers");

                    b.Navigation("Vacancies");
                });

            modelBuilder.Entity("Worky.Migrations.typeOfActivity", b =>
                {
                    b.Navigation("Manager_filters");

                    b.Navigation("Resume_filters");

                    b.Navigation("Vacancy_filters");
                });
#pragma warning restore 612, 618
        }
    }
}
