import React, { useState } from 'react';
import {
    Container,
    Paper,
    Typography,
    Box,
    TextField,
    Button,
    Stack,
    Snackbar,
    Alert, Divider
} from '@mui/material';
import axios from 'axios';
import YandexMapInput from "../../Components/YandexMapInput.jsx";


export default function CompanyRegister() {
    const [formData, setFormData] = useState({
        userName: '',
        email: '',
        phoneNumber: '',
        passwordHash: '',
        role: 'Company',
        name: '',
        email_info: '',
        phone_info: '',
        website: '',
    });
    const [latitude, setLatitude] = useState('');
    const [longitude, setLongitude] = useState('');

    const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });

    const handleChange = (e) => {
        setFormData(prev => ({
            ...prev,
            [e.target.name]: e.target.value
        }));
    };

    const handleCoordinatesChange = (lat, lng) => {
        setLatitude(lat.toString());
        setLongitude(lng.toString());
    };

    const handleSubmit = async () => {
        try {
            await axios.post('https://localhost:7106/api/v1/Authorization/Register', {
                ...formData,
                latitude,
                longitude
            }, {
                headers: { 'Content-Type': 'application/json' },
            });

            setSnackbar({
                open: true,
                message: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!',
                severity: 'success'
            });

            setTimeout(() => {
                window.location.href = '/Login';
            }, 1500);
        } catch (err) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', err.response?.data || err.message);
            setSnackbar({
                open: true,
                message: '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è',
                severity: 'error'
            });
        }
    };

    const handleCloseSnackbar = () => {
        setSnackbar(prev => ({ ...prev, open: false }));
    };

    return (
        <Container maxWidth="md" sx={{ py: 6 }}>
            <Paper elevation={3} sx={{ p: 4, borderRadius: 3 }}>
                <Typography variant="h5" fontWeight="bold" gutterBottom align="center">
                    üè¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–ø–∞–Ω–∏–∏
                </Typography>
                <Divider sx={{ mb: 3 }} />

                <Stack spacing={2}>
                    {/* –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è */}
                    <TextField label="–õ–æ–≥–∏–Ω" name="userName" value={formData.userName} onChange={handleChange} fullWidth />
                    <TextField label="Email" name="email" value={formData.email} onChange={handleChange} fullWidth />
                    <TextField label="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞" name="phoneNumber" value={formData.phoneNumber} onChange={handleChange} fullWidth />
                    <TextField label="–ü–∞—Ä–æ–ª—å" name="passwordHash" type="password" value={formData.passwordHash} onChange={handleChange} fullWidth />

                    {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏ */}
                    <TextField label="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏" name="name" value={formData.name} onChange={handleChange} fullWidth />
                    <TextField label="Email –∫–æ–º–ø–∞–Ω–∏–∏" name="email_info" value={formData.email_info} onChange={handleChange} fullWidth />
                    <TextField label="–¢–µ–ª–µ—Ñ–æ–Ω –∫–æ–º–ø–∞–Ω–∏–∏" name="phone_info" value={formData.phone_info} onChange={handleChange} fullWidth />
                    <TextField label="–°–∞–π—Ç –∫–æ–º–ø–∞–Ω–∏–∏" name="website" value={formData.website} onChange={handleChange} fullWidth />

                    {/* –ö–∞—Ä—Ç–∞ */}
                    <Box sx={{ mt: 2 }}>
                        <Typography variant="body2" gutterBottom>
                            –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ñ–∏—Å –Ω–∞ –∫–∞—Ä—Ç–µ
                        </Typography>
                        <YandexMapInput onCoordinatesChange={handleCoordinatesChange} />
                    </Box>

                    {/* –°–∫—Ä—ã—Ç—ã–µ –ø–æ–ª—è —à–∏—Ä–æ—Ç—ã –∏ –¥–æ–ª–≥–æ—Ç—ã */}
                    <TextField label="–®–∏—Ä–æ—Ç–∞" value={latitude} disabled fullWidth />
                    <TextField label="–î–æ–ª–≥–æ—Ç–∞" value={longitude} disabled fullWidth />

                    <Button variant="contained" color="primary" onClick={handleSubmit} fullWidth sx={{ mt: 2 }}>
                        –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
                    </Button>
                </Stack>
            </Paper>

            {/* Snackbar */}
            <Snackbar open={snackbar.open} autoHideDuration={3000} onClose={handleCloseSnackbar}>
                <Alert severity={snackbar.severity}>{snackbar.message}</Alert>
            </Snackbar>
        </Container>
    );
}